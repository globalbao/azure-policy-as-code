name: Terraform-CI-Tests
on:
  pull_request:
    branches: [main]
    paths:
      - "**.tf"
  workflow_dispatch:

jobs:
  Terraform-ValidationTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Validate Terraform
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          VALIDATE_TERRAFORM: true
          VALIDATE_TERRAFORM_TERRASCAN: true

  Terraform-CI-Tests:
    env:
      TF_IN_AUTOMATION: true
      TF_INPUT: false
      ARM_CLIENT_ID: ${{ secrets.SP_GLOBALBAO_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.SP_GLOBALBAO_SEC }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SP_GLOBALBAO_SUB }}
      ARM_TENANT_ID: ${{ secrets.SP_GLOBALBAO_TEN }}
    needs: Terraform-ValidationTests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v1.2.1
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
          terraform_version: 1.0.3

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend.hcl -no-color
        working-directory: Terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: Terraform
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
